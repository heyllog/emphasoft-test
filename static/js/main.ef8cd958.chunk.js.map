{"version":3,"sources":["components/AuthForm.jsx","components/Redirect.jsx","pages/AuthPage.jsx","components/TableSearch.jsx","components/Table.jsx","components/Loader.jsx","pages/UsersPage.jsx","App.jsx","index.js"],"names":["usernameCheck","passwordCheck","AuthForm","setToken","useState","username","setUsername","password","setPassword","errors","setErrors","loading","setLoading","history","useHistory","controller","AbortController","handleSubmit","event","a","preventDefault","test","fetch","method","headers","signal","body","JSON","stringify","response","ok","json","token","push","aborted","useEffect","abort","className","onSubmit","value","type","placeholder","onChange","target","Redirect","message","link","button","to","AuthPage","TableSearch","setSearchTerm","Table","users","onSort","onClick","map","user","key","id","first_name","last_name","Loader","UsersPage","setUsers","sortType","setSortType","searchTerm","filteredData","setFilteredData","useCallback","field","orderBy","getFilteredData","filter","toLowerCase","includes","Authorization","console","error","getUsers","isEmpty","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef8cd958.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Регулярные выражения для проверки логина и пароля, взяты из swagger, но изменены возможные длины строк\nconst usernameCheck = /^[\\w.@+-]{1,150}$/;\nconst passwordCheck = /^(?=.*[A-Z])(?=.*\\d).{8,128}$/;\n\nfunction AuthForm({ setToken }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const controller = new AbortController();\n\n  const usernameChangeHandler = (event) => setUsername(event.target.value);\n  const passwordChangeHandler = (event) => setPassword(event.target.value);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    if (!usernameCheck.test(username) || !passwordCheck.test(password)) {\n      setErrors('Incorrect username or password.');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        'https://emphasoft-test-assignment.herokuapp.com/api-token-auth/',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n          },\n          signal: controller.signal,\n          body: JSON.stringify({\n            username: username,\n            password: password,\n          }),\n        }\n      );\n\n      if (response.ok) {\n        let json = await response.json();\n        setToken(json.token);\n        history.push('users');\n      }\n    } catch {\n      if (!controller.signal.aborted) {\n        setErrors('Incorrect username or password.');\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <form className='auth-form' onSubmit={handleSubmit}>\n        <span className='login'>Account Login</span>\n        {errors && <span className='error'>{errors}</span>}\n        <label>\n          Username\n          <input\n            value={username}\n            type='text'\n            placeholder='Username'\n            onChange={usernameChangeHandler}\n          />\n        </label>\n        <br />\n        <label>\n          Password\n          <input\n            value={password}\n            type='password'\n            placeholder='Password'\n            onChange={passwordChangeHandler}\n          />\n        </label>\n        <br />\n        <button className='button' type='submit'>\n          {loading ? 'Loading...' : 'Login'}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Redirect({ message, link, button }) {\n  return (\n    <div className='authorized'>\n      <p>{message}</p>\n      <Link to={link}>\n        <button className='button'>{button}</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Redirect;\n","import React from 'react';\n\nimport AuthForm from '../components/AuthForm';\nimport Redirect from '../components/Redirect';\n\nfunction AuthPage({ token, setToken }) {\n  return (\n    <div className='auth'>\n      {token ? (\n        <Redirect message='You are already authorized' link='users' button='Users List' />\n      ) : (\n        <AuthForm setToken={setToken} />\n      )}\n    </div>\n  );\n}\n\nexport default AuthPage;\n","import React from 'react';\n\nfunction TableSearch({ setSearchTerm }) {\n  const valueChangeHandler = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div className='search'>\n      <label>\n        <span>Find by username: </span>\n        <input type='text' onChange={valueChangeHandler} />\n      </label>\n    </div>\n  );\n}\n\nexport default TableSearch;\n","import React from 'react';\n\nfunction Table({ users, onSort }) {\n  return (\n    <div className='users-table'>\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => onSort('id')}>ID</th>\n            <th>Username</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id}>\n              <td>{user.id}</td>\n              <td>{user.username}</td>\n              <td>{user.first_name}</td>\n              <td>{user.last_name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\n\nfunction Loader() {\n  return (\n    <div className='lds-facebook'>\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport orderBy from 'lodash/orderBy';\nimport isEmpty from 'lodash/isEmpty';\n\nimport TableSearch from '../components/TableSearch';\nimport Table from '../components/Table';\nimport Redirect from '../components/Redirect';\nimport Loader from '../components/Loader';\n\nfunction UsersPage({ token }) {\n  const [users, setUsers] = useState([]);\n  const [sortType, setSortType] = useState('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredData, setFilteredData] = useState(null);\n\n  const onSort = useCallback(\n    (field) => {\n      setSortType(sortType === 'asc' ? 'desc' : 'asc');\n      setUsers(orderBy([...users], field, sortType));\n    },\n    [sortType, users]\n  );\n\n  const getFilteredData = useCallback(\n    (value) => {\n      if (!value) {\n        return null;\n      }\n\n      return users.filter((user) => user['username'].toLowerCase().includes(value.toLowerCase()));\n    },\n    [users]\n  );\n\n  useEffect(() => {\n    setFilteredData(getFilteredData(searchTerm));\n  }, [getFilteredData, searchTerm]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getUsers = async (token) => {\n      try {\n        const response = await fetch(\n          'https://emphasoft-test-assignment.herokuapp.com/api/v1/users/',\n          {\n            signal: controller.signal,\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          let json = await response.json();\n          setUsers(json);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (token) {\n      getUsers(token);\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [token]);\n\n  return token ? (\n    <div className='users-page'>\n      <TableSearch setSearchTerm={setSearchTerm} />\n      {isEmpty(users) ? (\n        <Loader />\n      ) : isEmpty(filteredData) && filteredData ? (\n        <span className='error'>No such users</span>\n      ) : (\n        <Table users={filteredData ? filteredData : users} onSort={onSort} />\n      )}\n    </div>\n  ) : (\n    <Redirect message='You are not authorized' link='/' button='Sign In' />\n  );\n}\n\nexport default UsersPage;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AuthPage from './pages/AuthPage';\nimport UsersPage from './pages/UsersPage';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  const [token, setToken] = useState('');\n  // const [token, setToken] = useState('781bd9f1de084f4daa7ba2aa8a71a2eab855354e');\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          <AuthPage token={token} setToken={setToken} />\n        </Route>\n        <Route path='/users'>\n          <UsersPage token={token} />\n        </Route>\n        {/*<Route path='*'>*/}\n        {/*  <NotFound />*/}\n        {/*</Route>*/}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}